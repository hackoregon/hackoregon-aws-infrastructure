Description: >
    This template deploys an Application Load Balancer that exposes our various ECS services.
    We create them it a seperate nested template, so it can be referenced by all of the other nested templates.
    Last Modified: 27 May 2019
    By Mike Lonergan (mikethecanuck@gmail.com)

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the Application Load Balancer should be deployed to

    Subnets:
        Description: Choose which subnets the Application Load Balancer should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    SecurityGroup:
        Description: Select the Security Group to apply to the Application Load Balancer
        Type: AWS::EC2::SecurityGroup::Id

    PublicAlbAcmCertificate:
        Description: The AWS Certification Manager certificate ARN for the ALB certificate - this certificate should be created in the region you wish to run the ALB and must reference the domain name you use below.
        Type: String

Conditions:

    SslCertificate:
        !Not [!Equals [ '', !Ref PublicAlbAcmCertificate ] ]
    NoSslCertificate:
        !Equals [ '', !Ref PublicAlbAcmCertificate ]

Resources:

    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: !Ref EnvironmentName
            Subnets: !Ref Subnets
            SecurityGroups:
                - !Ref SecurityGroup
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
                - Key: Account
                  Value: HackOregon
                - Key: Project
                  Value: Admin

    LoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Port: 80
            Protocol: HTTP
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref DefaultTargetGroup

    LoadBalancerListenerTls:
        Condition: SslCertificate
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            Certificates:
                - CertificateArn: !Ref PublicAlbAcmCertificate
            LoadBalancerArn: !Ref LoadBalancer
            Port: 443
            Protocol: HTTPS
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref DefaultTargetGroup

    # ALB global redirect from HTTP to HTTPS

    PublicLoadBalancerHttpRedirectListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        DependsOn:
        - LoadBalancer
        Properties:
        DefaultActions:
            - RedirectConfig:
                Host: "#{host}"
                Path: "/#{path}"
                Port: 443
                Protocol: "HTTPS"
                Query: "#{query}"
                StatusCode: HTTP_301
            Type: redirect
        LoadBalancerArn: !Ref LoadBalancer # don't know how to construct this - see https://stackoverflow.com/questions/52085478/aws-cloudformation-application-load-balancer-how-to-redirect-http-listener-to/53498717#53498717
        Port: 80
        Protocol: HTTP

    # We define a default target group here, as this is a mandatory Parameter
    # when creating an Application Load Balancer Listener.
    # However, this is not used - instead a target group is created per-service
    # in each service template (../services/*)
    DefaultTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Name: !Sub ${EnvironmentName}-default
            VpcId: !Ref VPC
            Port: 80
            Protocol: HTTP

Outputs:

    LoadBalancer:
        Description: A reference to the Application Load Balancer
        Value: !Ref LoadBalancer

    LoadBalancerUrl:
        Description: The URL of the ALB
        Value: !GetAtt LoadBalancer.DNSName

    Listener:
        Description: A reference to a port 80 listener
        Value: !Ref LoadBalancerListener

    ListenerTls:
        Description: A reference to a port 443 listener
        Value: !Ref LoadBalancerListenerTls

    PublicAlbDnsName:
        Value:
            !GetAtt LoadBalancer.DNSName

    PublicAlbHostname:
        Value:
            !If [ NoSslCertificate, !Join [ '', [ 'http://', !GetAtt LoadBalancer.DNSName ] ], !Join [ '', [ 'https://', !GetAtt LoadBalancer.DNSName ] ] ]

    SslCertificate:
        Value:
            !If [ SslCertificate, True, False ]

    CanonicalHostedZoneId:
        Value: !GetAtt LoadBalancer.CanonicalHostedZoneID
